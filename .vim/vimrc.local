function! RunFrontendTestFile() abort
    let path = expand('%:p')
    execute "!export NVM_DIR=\"$HOME/.nvm\" && source \"/usr/local/opt/nvm/nvm.sh\" && cd services/frontend && nvm install && node_modules/.bin/jest " . path
endfunction

function! RunComicStoreTestFile() abort
    let file = expand('%:t:r')

    execute "!cd services/comic_store && ./mvnw clean &&  ./mvnw -Dtest=" . file . "\\* test"
endfunction

function! RunFrontendTest(path) abort
    " go to line of containing test/describe/it block
    execute "norm $?\\v^\\s*(test|it|describe)\<CR>"
    
    " copy test description to @a
    norm 0f"l"ayi"

    execute "!export NVM_DIR=\"$HOME/.nvm\" && source \"/usr/local/opt/nvm/nvm.sh\" && cd services/frontend && nvm install && node_modules/.bin/jest " . a:path . " -t \"" . @a . "\""
endfunction

function! RunComicStoreTest(path) abort
    let file = expand('%:t:r')

    " go to line of containing test block
    execute "norm $?\\v^\\s*\\@Test\<CR>j"
    
    " copy test description to @a
    norm 0f(T "ayt(

    execute "!cd services/comic_store && ./mvnw clean &&  ./mvnw -Dtest=" . file . "\\*\\#" . @a . " test"
endfunction

function! RunTestFile() abort
    let path = expand('%:p')

    if path =~ "services/frontend"
        call RunFrontendTestFile()
    elseif path =~ "services/comic_store"
        call RunComicStoreTestFile()
    else
        redraw!
        echomsg "Sorry, don't know how to run those tests yet."
    endif
endfunction

function! RunTest() abort
    let path = expand('%:p')

    if path =~ "services/frontend"
        call RunFrontendTest(path)
    elseif path =~ "services/comic_store"
        call RunComicStoreTest(path)
    else
        redraw!
        echomsg "Sorry, don't know how to run those tests yet."
    endif
endfunction

function! Run() abort
    let name = "term://RUN"
    split
    if(bufname(name) != "")
        execute "buffer " . name
    else
        execute "term ./run dev"
        execute "file " . name
    endif
endfunction

command! FILETEST call RunTestFile()
command! TEST call RunTest()
command! RUN call Run()
